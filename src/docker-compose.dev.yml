version: "3.9"

services:
#  app:
#    container_name: analytics-service
#    build:
#      dockerfile: ./AnalyticsService/Dockerfile
#      context: .
#    ports:
#      - "8080:8080"
#      - "8081:8081"
  task-service:
    container_name: task-service
    build:
      dockerfile: ./NotificationService.TaskService/Dockerfile
      context: .
    environment:
      DB_CONN: "postgres://root:root@db:5432/service-db?sslmode=disable"
    depends_on:
      migrate:
        condition: service_completed_successfully
      db:
        condition: service_healthy

  db:
    image: postgres:15
    container_name: service-db
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: service-db
      PGUSER: root
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "service-db"]
      interval: 30s
      timeout: 5s
      retries: 5

  migrate:
    image: migrate/migrate
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./NotificationService.Database/Migrations:/Migrations
    command:
      [ "-path", "/Migrations", "-database", "postgres://root:root@db:5432/service-db?sslmode=disable", "up"]

volumes:
  pgdata: